{"ast":null,"code":"import _slicedToArray from\"/Users/shaymathis/biz-cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import\"../index.css\";import Tippy from'@tippyjs/react';import{BlockPicker}from'react-color';import Axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Card(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),title=_useState6[0],setTitle=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),company=_useState8[0],setCompany=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),biz_add=_useState10[0],setBizAddress=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),biz_number=_useState12[0],setBizNumber=_useState12[1];var _useState13=useState('#ccc'),_useState14=_slicedToArray(_useState13,2),color=_useState14[0],setColor=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),cardList=_useState16[0],setCardList=_useState16[1];useEffect(function(){Axios.get(\"http://localhost:5000/api.get\").then(function(response){setCardList(response.data);});});var saveCard=function saveCard(){Axios.post(\"http://locoalhost:5000/api/insert\",{name:name,email:email,title:title,company:company,biz_add:biz_add,biz_number:biz_number}).then(function(){alert(\"successful insert\");});};return/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"\",style:{backgroundColor:color,textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"overflow\",children:/*#__PURE__*/_jsx(\"img\",{src:\"{getImage}\",alt:\"\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body text-dark\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",onChange:function onChange(e){setName(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Business Email\",name:\"email\",onChange:function onChange(e){setEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Title\",name:\"title\",onChange:function onChange(e){setTitle(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Company\",name:\"company\",onChange:function onChange(e){setCompany(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Business Address\",name:\"biz-add\",onChange:function onChange(e){setBizAddress(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Business Number\",name:\"biz_number\",onChange:function onChange(e){setBizNumber(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{className:\"card-text text-secondary\"})]})]}),/*#__PURE__*/_jsx(Tippy,{interactive:true,placement:'bottom',content:/*#__PURE__*/_jsx(BlockPicker,{color:color,onChangeComplete:function onChangeComplete(color){return setColor(color.hex);}}),children:/*#__PURE__*/_jsx(\"button\",{className:\"ref-button\",children:\"Change Background Color\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:saveCard,className:\"save\",children:\"Save\"}),cardList.map(function(val){return/*#__PURE__*/_jsxs(\"h1\",{children:[\" \",val.name]});})]});};export default Card;","map":{"version":3,"sources":["/Users/shaymathis/biz-cards/src/pages/card.js"],"names":["React","useState","useEffect","Tippy","BlockPicker","Axios","Card","name","setName","email","setEmail","title","setTitle","company","setCompany","biz_add","setBizAddress","biz_number","setBizNumber","color","setColor","cardList","setCardList","get","then","response","data","saveCard","post","alert","backgroundColor","textAlign","e","target","value","hex","map","val"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport \"../index.css\";\nimport Tippy from '@tippyjs/react';\nimport {BlockPicker} from 'react-color';\nimport Axios from 'axios'\n\n\nfunction Card () {\n    const[name, setName]= useState(\"\");\n    const[email, setEmail]= useState(\"\");\n    const[title, setTitle]= useState(\"\");\n    const[company, setCompany]= useState(\"\");\n    \n    const[biz_add, setBizAddress]= useState(\"\");\n    const[biz_number, setBizNumber]= useState(\"\");\n    \n    const [color, setColor] = useState('#ccc')\n\n    const [cardList, setCardList] = useState([])\n\n    useEffect(() =>{\n        Axios.get (\"http://localhost:5000/api.get\").then((response) =>{\n         setCardList(response.data) \n        });\n    })\n\n    const saveCard =() =>{\n        Axios.post(\"http://locoalhost:5000/api/insert\", {\n            name: name,\n            email: email,\n            title: title,\n            company: company,\n            biz_add: biz_add,\n            biz_number: biz_number,\n    }).then(() => {\n        alert(\"successful insert\");\n    })\n\n\n    }\n    return(\n        \n     <div className=\"form\">\n         <div className='' style={{ backgroundColor: color, textAlign: 'center', }}>\n            <div className=\"overflow\">\n                <img src=\"{getImage}\" alt=\"\"/>\n            </div>\n\n            \n            \n            <div className='card-body text-dark'>\n\n                <input \n                type=\"text\" \n                placeholder=\"Name\"\n                name=\"name\"\n                onChange={(e) => {\n                    setName(e.target.value);\n                }}/>\n                \n                 <input \n                type=\"text\" \n                placeholder=\"Business Email\"\n                name=\"email\"\n                onChange={(e) => {\n                    setEmail(e.target.value);\n                }}/>\n                \n                \n                <input \n                type=\"text\" \n                placeholder=\"Title\"\n                name=\"title\"\n                onChange={(e) => {\n                    setTitle(e.target.value);\n                }}/>\n\n\n                <input \n                type=\"text\" \n                placeholder=\"Company\"\n                name=\"company\"\n                onChange={(e) => {\n                    setCompany(e.target.value);\n                }}/>\n\n                \n               \n                \n                \n                <input \n                type=\"text\" \n                placeholder=\"Business Address\"\n                name=\"biz-add\"\n                onChange={(e) => {\n                    setBizAddress(e.target.value);\n                }}/>\n\n                \n                <input \n                type=\"text\" \n                placeholder=\"Business Number\"\n                name=\"biz_number\"\n                onChange={(e) => {\n                    setBizNumber(e.target.value);\n                }}/>\n\n                \n\n               \n              \n                <p className='card-text text-secondary'>\n                    \n                </p>\n\n                \n            </div>\n\n\n\n        </div>\n           \n            <Tippy interactive={true} placement={'bottom'} content={\n          <BlockPicker\n            color={color}\n            onChangeComplete={color => setColor(color.hex)}\n          />\n        }>\n            \n          <button className='ref-button'>Change Background Color</button>\n          \n\n        </Tippy>\n\n        <button onClick={saveCard} className='save'>Save</button>\n        \n        {cardList.map((val) => {\n            return <h1> {val.name}</h1>\n        })}\n        </div>\n\n   \n       \n    );\n\n};\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}